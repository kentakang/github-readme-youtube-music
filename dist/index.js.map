{"version":3,"sources":["webpack://github-readme-youtube-music/./node_modules/@actions/core/lib/command.js","webpack://github-readme-youtube-music/./node_modules/@actions/core/lib/core.js","webpack://github-readme-youtube-music/./node_modules/@actions/core/lib/file-command.js","webpack://github-readme-youtube-music/./node_modules/@actions/core/lib/utils.js","webpack://github-readme-youtube-music/./node_modules/puppeteer-extra-plugin-stealth/index.js","webpack://github-readme-youtube-music/./src/index.ts","webpack://github-readme-youtube-music/external \"child_process\"","webpack://github-readme-youtube-music/external \"fs\"","webpack://github-readme-youtube-music/external \"os\"","webpack://github-readme-youtube-music/external \"path\"","webpack://github-readme-youtube-music/external \"puppeteer\"","webpack://github-readme-youtube-music/external \"puppeteer-extra-plugin\"","webpack://github-readme-youtube-music/webpack/bootstrap","webpack://github-readme-youtube-music/webpack/startup"],"names":["__importStar","this","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","os","utils_1","issueCommand","command","properties","message","cmd","Command","process","stdout","write","toString","EOL","issue","name","cmdStr","keys","length","first","key","val","s","toCommandValue","replace","escapeData","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","command_1","file_command_1","path","ExitCode","error","Error","startGroup","endGroup","exportVariable","convertedVal","env","delimiter","commandValue","setSecret","secret","addPath","inputPath","getInput","options","toUpperCase","required","trim","setOutput","setCommandEcho","enabled","setFailed","exitCode","Failure","isDebug","debug","warning","info","group","fn","saveState","getState","fs","filePath","existsSync","appendFileSync","encoding","input","String","JSON","stringify","PuppeteerExtraPlugin","StealthPlugin","opts","super","availableEvasions","Set","enabledEvasions","map","defaults","evasions","browser","setMaxListeners","module","console","log","exec","stealthPlugin","use","launch","headless","newPage","page","goto","waitUntil","waitForSelector","type","keyboard","press","content","data","close","r","v","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","'use strict'\n\nconst { PuppeteerExtraPlugin } = require('puppeteer-extra-plugin')\n\n/**\n * Stealth mode: Applies various techniques to make detection of headless puppeteer harder. 💯\n *\n * ### Purpose\n * There are a couple of ways the use of puppeteer can easily be detected by a target website.\n * The addition of `HeadlessChrome` to the user-agent being only the most obvious one.\n *\n * The goal of this plugin is to be the definite companion to puppeteer to avoid\n * detection, applying new techniques as they surface.\n *\n * As this cat & mouse game is in it's infancy and fast-paced the plugin\n * is kept as flexibile as possible, to support quick testing and iterations.\n *\n * ### Modularity\n * This plugin uses `puppeteer-extra`'s dependency system to only require\n * code mods for evasions that have been enabled, to keep things modular and efficient.\n *\n * The `stealth` plugin is a convenience wrapper that requires multiple [evasion techniques](./evasions/)\n * automatically and comes with defaults. You could also bypass the main module and require\n * specific evasion plugins yourself, if you whish to do so (as they're standalone `puppeteer-extra` plugins):\n *\n * ```es6\n * // bypass main module and require a specific stealth plugin directly:\n * puppeteer.use(require('puppeteer-extra-plugin-stealth/evasions/console.debug')())\n * ```\n *\n * ### Contributing\n * PRs are welcome, if you want to add a new evasion technique I suggest you\n * look at the [template](./evasions/_template) to kickstart things.\n *\n * ### Kudos\n * Thanks to [Evan Sangaline](https://intoli.com/blog/not-possible-to-block-chrome-headless/) and [Paul Irish](https://github.com/paulirish/headless-cat-n-mouse) for kickstarting the discussion!\n *\n * ---\n *\n * @todo\n * - white-/blacklist with url globs (make this a generic plugin method?)\n * - dynamic whitelist based on function evaluation\n *\n * @example\n * const puppeteer = require('puppeteer-extra')\n * // Enable stealth plugin with all evasions\n * puppeteer.use(require('puppeteer-extra-plugin-stealth')())\n *\n *\n * ;(async () => {\n *   // Launch the browser in headless mode and set up a page.\n *   const browser = await puppeteer.launch({ args: ['--no-sandbox'], headless: true })\n *   const page = await browser.newPage()\n *\n *   // Navigate to the page that will perform the tests.\n *   const testUrl = 'https://intoli.com/blog/' +\n *     'not-possible-to-block-chrome-headless/chrome-headless-test.html'\n *   await page.goto(testUrl)\n *\n *   // Save a screenshot of the results.\n *   const screenshotPath = '/tmp/headless-test-result.png'\n *   await page.screenshot({path: screenshotPath})\n *   console.log('have a look at the screenshot:', screenshotPath)\n *\n *   await browser.close()\n * })()\n *\n * @param {Object} [opts] - Options\n * @param {Set<string>} [opts.enabledEvasions] - Specify which evasions to use (by default all)\n *\n */\nclass StealthPlugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n\n  get name() {\n    return 'stealth'\n  }\n\n  get defaults() {\n    const availableEvasions = new Set([\n      'chrome.app',\n      'chrome.csi',\n      'chrome.loadTimes',\n      'chrome.runtime',\n      'iframe.contentWindow',\n      'media.codecs',\n      'navigator.hardwareConcurrency',\n      'navigator.languages',\n      'navigator.permissions',\n      'navigator.plugins',\n      'navigator.webdriver',\n      'sourceurl',\n      'user-agent-override',\n      'webgl.vendor',\n      'window.outerdimensions'\n    ])\n    return {\n      availableEvasions,\n      // Enable all available evasions by default\n      enabledEvasions: new Set([...availableEvasions])\n    }\n  }\n\n  /**\n   * Requires evasion techniques dynamically based on configuration.\n   *\n   * @private\n   */\n  get dependencies() {\n    return new Set(\n      [...this.opts.enabledEvasions].map(e => `${this.name}/evasions/${e}`)\n    )\n  }\n\n  /**\n   * Get all available evasions.\n   *\n   * Please look into the [evasions directory](./evasions/) for an up to date list.\n   *\n   * @type {Set<string>} - A Set of all available evasions.\n   *\n   * @example\n   * const pluginStealth = require('puppeteer-extra-plugin-stealth')()\n   * console.log(pluginStealth.availableEvasions) // => Set { 'user-agent', 'console.debug' }\n   * puppeteer.use(pluginStealth)\n   */\n  get availableEvasions() {\n    return this.defaults.availableEvasions\n  }\n\n  /**\n   * Get all enabled evasions.\n   *\n   * Enabled evasions can be configured either through `opts` or by modifying this property.\n   *\n   * @type {Set<string>} - A Set of all enabled evasions.\n   *\n   * @example\n   * // Remove specific evasion from enabled ones dynamically\n   * const pluginStealth = require('puppeteer-extra-plugin-stealth')()\n   * pluginStealth.enabledEvasions.delete('console.debug')\n   * puppeteer.use(pluginStealth)\n   */\n  get enabledEvasions() {\n    return this.opts.enabledEvasions\n  }\n\n  /**\n   * @private\n   */\n  set enabledEvasions(evasions) {\n    this.opts.enabledEvasions = evasions\n  }\n\n  async onBrowser(browser) {\n    if (browser && browser.setMaxListeners) {\n      // Increase event emitter listeners to prevent MaxListenersExceededWarning\n      browser.setMaxListeners(30)\n    }\n  }\n}\n\n/**\n * Default export, PuppeteerExtraStealthPlugin\n *\n * @param {Object} [opts] - Options\n * @param {Set<string>} [opts.enabledEvasions] - Specify which evasions to use (by default all)\n */\nconst defaultExport = opts => new StealthPlugin(opts)\nmodule.exports = defaultExport\n\n// const moduleExport = defaultExport\n// moduleExport.StealthPlugin = StealthPlugin\n// module.exports = moduleExport\n","/* eslint-disable global-require */\nimport { getInput, setFailed } from '@actions/core';\nimport { exec } from 'child_process';\nimport { Browser, Page } from 'puppeteer';\n\nconsole.log('installing puppeteer');\nexec('sudo npm i puppeteer --unsafe-perm=true --allow-root', () => {\n  try {\n    const puppeteer = require('puppeteer');\n    const stealthPlugin = require('puppeteer-extra-plugin-stealth');\n    const youtubeId = getInput('account-id');\n    const youtubePw = getInput('account-password');\n\n    puppeteer.use(stealthPlugin());\n\n    (async () => {\n      const browser: Browser = await puppeteer.launch({ headless: true });\n      const page: Page = await browser.newPage();\n\n      // Login Process\n      await page.goto('https://accounts.google.com/signin/v2/identifier', { waitUntil: 'networkidle2' });\n      await page.waitForSelector('#identifierId');\n      await page.type('input[type=\"email\"]', youtubeId);\n      await page.keyboard.press('Enter');\n      await page.waitForSelector('input[type=\"password\"]');\n      await page.type('input[type=\"password\"]', youtubePw);\n      await page.keyboard.press('Enter');\n\n      const data = await page.content();\n\n      console.log('data', data);\n\n      await browser.close();\n\n      return new Promise((resolve) => resolve('end'));\n    })().then((r) => console.log(r), (v) => console.log(v));\n  } catch (error) {\n    setFailed(error.message);\n  }\n});\n","module.exports = require(\"child_process\");;","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"puppeteer\");;","module.exports = require(\"puppeteer-extra-plugin\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(432);\n"],"sourceRoot":""}